databases:
- name: zulip-postgresql
  databaseName: zulip
  user: zulip
  ipAllowList: []

services:
- type: redis
  name: zulip-redis
  ipAllowList: []

- type: pserv
  name: zulip-memcached
  env: docker
  dockerfilePath: ./memcached/Dockerfile
  autoDeploy: false
  envVars:
    - key: MEMCACHED_PASSWORD
      generateValue: true

- type: pserv
  plan: starter
  name: zulip-rabbitmq
  runtime: image
  image:
    url: rabbitmq:3-management
  autoDeploy: false
  envVars:
  - key: RABBITMQ_DEFAULT_USER
    value: "zulip"
  - key: RABBITMQ_DEFAULT_PASS
    generateValue: True
  disk:
    name: zulip-rabbitmq
    mountPath: /var/lib/rabbitmq/mnesia

- type: web
  name: zulip
  env: docker
  plan: standard
  dockerfilePath: ./docker-zulip/Dockerfile
  autoDeploy: false
  disk:
    name: zulip-persistent-storage
    mountPath: /data
  envVars:
    - key: SETTING_EXTERNAL_HOST
      sync: false # the hostname your users will use to connect to your Zulip server. this defaults to the onrender.com domain given to you by Render
    - key: SETTING_ZULIP_ADMINISTRATOR
      sync: false # (required) initial admin email for setup; set to your personal email address
    - key: SETTING_EMAIL_HOST
      sync: false  # (for production) set to a valid SMTP server host in the dashboard
    - key: SETTING_EMAIL_HOST_USER #TODO
      sync: false # (for production) set to the SMTP user in the dashboard
    - key: SETTING_EMAIL_PORT
      sync: false # (for production) set to the SMTP email port in the dashboard
    - key: SECRETS_email_password
      sync: false # (for production) set to the SMTP server password in the dashboard
    - key: SETTING_EMAIL_USE_SSL
      value: False # (for production) False since TLS replaces SSL; SETTING_EMAIL_USE_TLS is set to True
    - key: SETTING_EMAIL_USE_TLS
      value: True
    - key: QUEUE_WORKERS_MULTIPROCESS
      value: False # set to True if Zulip plan is pro or greater
    - key: ZULIP_AUTH_BACKENDS
      value: 'EmailAuthBackend' # Zulip supports other authentication methods https://zulip.readthedocs.io/en/latest/production/authentication-methods.html
    - key: SECRETS_secret_key
      generateValue: true
    - key: DB_HOST
      fromDatabase:
        name: zulip-postgresql
        property: host
    - key: DB_HOST_PORT
      fromDatabase:
        name: zulip-postgresql
        property: port
    - key: DB_USER
      fromDatabase:
        name: zulip-postgresql
        property: user
    - key: SETTING_MEMCACHED_LOCATION
      fromService:
        name: zulip-memcached
        type: pserv
        property: hostport
    - key: SETTING_REDIS_HOST
      fromService:
        name: zulip-redis
        type: redis
        property: host
    - key: REDIS_PORT
      fromService:
        name: zulip-redis
        type: redis
        property: port
    - key: SETTING_RABBITMQ_HOST
      fromService:
        name: zulip-rabbitmq
        type: pserv
        property: host
    - key: SECRETS_memcached_password
      fromService:
        name: zulip-memcached
        type: pserv
        envVarKey: MEMCACHED_PASSWORD
    - key: SECRETS_postgres_password
      fromDatabase:
        name: zulip-postgresql
        property: password
    - key: SECRETS_rabbitmq_password
      fromService:
        name: zulip-rabbitmq
        type: pserv
        envVarKey: RABBITMQ_DEFAULT_PASS
    # - key: SECRETS_redis_password
    #   fromService:
    #     name: zulip-redis
    #     type: pserv
    #     envVarKey: REDIS_PASSWORD
    - key: DISABLE_HTTPS
      value: True # Do not edit! Render gives you SSL automatically. This removes https-related config
    - key: PORT
      value: 80 # Do not edit! Nginx listens for http traffic at port 80
    - key: SSL_CERTIFICATE_GENERATION # Render gives you SSL out of the box
      value: 'self-signed' # We set this to self-signed, since setup requires a value, but this is not used
